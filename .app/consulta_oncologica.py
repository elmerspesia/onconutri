import streamlit as st
from transformers import pipeline

@st.cache_resource
def load_generator():
    return pipeline("text2text-generation", model="google/flan-t5-base")

def gerar_diagnostico_ia(prompt):
    generator = load_generator()
    resposta = generator(prompt, max_length=512, do_sample=True)
    return resposta[0]['generated_text']

def montar_prompt(dados):
    prompt = f"""
Voc√™ √© um m√©dico oncologista especialista em preven√ß√£o de c√¢ncer. Analise o perfil do paciente abaixo com base em diretrizes cient√≠ficas da OMS, INCA e literatura m√©dica.

Perfil do paciente:
- Frequ√™ncia alimentar: {dados['frequencia_alimentar']}
- Hist√≥rico familiar de c√¢ncer: {dados['historico_familiar']}
- Tipo de dieta: {dados['tipo_dieta']}
- Atividade f√≠sica: {dados['atividade_fisica']}
- Exposi√ß√£o a toxinas: {dados['exposicao_toxinas']}
- Estresse di√°rio: {dados['nivel_estresse']}

Com base nessas informa√ß√µes:
1. Calcule um score de risco de c√¢ncer (de 0.00 a 1.00).
2. Identifique poss√≠veis tipos de c√¢ncer de risco elevado.
3. Forne√ßa um diagn√≥stico preventivo e recomenda√ß√µes de mudan√ßa de estilo de vida para reduzir o risco.
Responda em portugu√™s claro e acess√≠vel.
"""
    return prompt

def show_form():
    st.header("üß¨ Formul√°rio de Consulta")

    frequencia_alimentar = st.selectbox("Frequ√™ncia de alimenta√ß√£o processada:", ["Alta", "M√©dia", "Baixa"])
    historico_familiar = st.selectbox("Hist√≥rico familiar de c√¢ncer:", ["Sim - parentes de 1¬∫ grau", "Sim - parentes de 2¬∫ grau", "N√£o"])
    tipo_dieta = st.selectbox("Tipo de dieta predominante", ["Industrializada", "Balanceada", "Vegetariana", "Outros"])
    atividade_fisica = st.selectbox("Frequ√™ncia de atividade f√≠sica", ["Sedent√°rio", "Moderado", "Ativo"])
    exposicao_toxinas = st.selectbox("Exposi√ß√£o a toxinas (agrot√≥xicos, radia√ß√£o)", ["Nenhuma", "Moderada", "Alta"])
    nivel_estresse = st.selectbox("N√≠vel de estresse di√°rio", ["Baixo", "M√©dio", "Alto"])

    if st.button("üîç Processar Consulta"):
        with st.spinner("Processando consulta..."):
            dados = {
                "frequencia_alimentar": frequencia_alimentar,
                "historico_familiar": historico_familiar,
                "tipo_dieta": tipo_dieta,
                "atividade_fisica": atividade_fisica,
                "exposicao_toxinas": exposicao_toxinas,
                "nivel_estresse": nivel_estresse
            }
            prompt = montar_prompt(dados)
            resposta = gerar_diagnostico_ia(prompt)

            st.success("‚úÖ Consulta processada com sucesso.")

            st.subheader("üìù Resultado da Consulta Oncol√≥gica")

            # Score fict√≠cio extra√≠do da IA (seria ideal extrair com express√£o regular)
            score = "0.00"
            if "0." in resposta or "1.0" in resposta:
                import re
                encontrados = re.findall(r"\b0\.\d{2}|\b1\.00", resposta)
                if encontrados:
                    score = encontrados[0]

            st.markdown(f"üìä **Score de Propens√£o ao C√¢ncer:** `{score}`")
            st.markdown("üìÑ **Diagn√≥stico e Recomenda√ß√£o:**")
            st.write(resposta)
